$gradient: linear-gradient(45deg, #651bb4, #0060c0); // custom color theme

.title {
  margin: max(-1rem, -1vw) 0 max(-0.5rem, -0.5vw);
  font-size: 500%;

  span {
    opacity: 90%;
    background-clip: text;
    background-image: $gradient;
    -webkit-text-fill-color: transparent;
  }
}

// default form layout

.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.2rem;
}

.formButton {
  width: 14rem;
  border-radius: 8px;

  &:first-of-type {
    background-color: #23216d;
  }

  img {
    position: relative;
    bottom: 1px;
  }
}

.formsContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.8rem;
}

// dropdown component

.dropdownHandler {
  margin-bottom: 8rem;
  position: relative;

  .formButton {
    position: relative;
    z-index: 1;
    background-color: var(--primary);
  }

  .dropdown {
    padding: 8px 0 4px;
    position: absolute;
    top: calc(100% - 8px);
    left: 0;
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 4px;
    background-color: var(--primary);
    border-radius: 0 0 8px 8px;
    overflow: hidden;

    hr {
      margin: 0;
      border: none;
      border-top: 1px solid var(--background);
    }

    button {
      padding: 12px 0;
      border-radius: 0;
      transform: none;
    }
  }
}

// game form component

.form {
  width: 45rem; // custom width
  display: flex;
  flex-direction: column;
  align-items: stretch;
  gap: 1rem;
  border-radius: 16px;
  background-color: var(--background);
  overflow: hidden;
}

$form-margin: 1.25rem;

.controls {
  position: relative;
  padding: $form-margin;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-image: $gradient;
  border-bottom: 1px solid var(--black);

  &::before {
    content: "";
    opacity: 90%;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--black);
  }

  & > * {
    z-index: 1;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  button {
    opacity: 90%;
    padding: 6px;
    background: none;
    border-radius: 4px;

    &.presentationButton {
      margin-left: 6px;
      padding: 6px 16px;
      border: 1px solid rgba(#ffffff, 0.5);
      background-color: rgba(#ffffff, 0.15);
    }
  }
}

// custom form styling

.content {
  padding: 0.5rem $form-margin $form-margin;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;

  input,
  textarea {
    width: 100%;
    border-radius: 8px;
  }
}

.inputs {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1rem;

  h3 {
    margin: -0.25rem 0 0.5rem;
  }
}

.answersGrid {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 0.6rem;
}

.answerBox {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  border-radius: 8px;
}

.formValue {
  position: relative;
  display: flex;

  $default-padding: 0.7rem;
  $number-padding: 23px;

  p {
    z-index: 1;
    position: absolute;
    top: $default-padding;
    left: $default-padding;
    width: $number-padding;
    display: flex;
    justify-content: center;
    pointer-events: none;
  }

  textarea {
    padding: $default-padding;
    padding-left: calc($default-padding + $number-padding);
    background-color: var(--primary);
    border-radius: 0;

    &::placeholder {
      position: relative;
      top: 0.5px;
    }
  }
}

.checkboxHandler {
  padding: 0.6rem;
  width: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  background-color: var(--secondary);
  border-top: 0.5px solid #4e4e4e;

  .checkbox {
    display: flex;
    transition: all 200ms ease;
    cursor: pointer;

    $color: #72a1ff;

    &:hover {
      color: $color;

      .check .text {
        color: $color !important;
      }

      .check svg {
        stroke: $color !important;
      }
    }

    input[type="checkbox"] {
      display: none;

      $color: #4ae05b;

      &:checked + .check .text {
        color: $color;
      }

      &:checked + .check svg {
        stroke: $color;
      }

      &:checked + .check svg path {
        stroke-dashoffset: 60;
        transition: all 200ms ease;
      }

      &:checked + .check svg polyline {
        stroke-dashoffset: 42;
        transition: stroke-dashoffset 300ms 150ms;
      }
    }

    .check {
      display: flex;
      align-items: center;
      gap: 0.5rem;

      p {
        opacity: 75%;
        font-size: 80%;
      }

      svg {
        fill: none;
        stroke-linecap: round;
        stroke-linejoin: round;
        stroke: var(--white);
        stroke-width: 1.5;
        transition: all 200ms ease;

        path {
          stroke-dasharray: 60;
          stroke-dashoffset: 0;
        }

        polyline {
          stroke-width: 2;
          stroke-dasharray: 22;
          stroke-dashoffset: 66;
        }
      }
    }
  }
}

.instruction {
  margin-bottom: 0.25rem;
  opacity: 65%;
  font-size: 90%;
}
